---
title: "ggplot2: Basics"
format: letterbox-revealjs
footer: 'Janine Birkholz & Nicklas Hafiz // Mai 2025'
execute: 
  fig-width: 5
  fig-height: 6
---

## {background-image="images/ggplot_art.png" background-size="1160px" background-position="15%"}

::: {.absolute right="0.5%" bottom="0.5%" style="font-size:0.25em; padding: 0.15em 0.15em; background-color: rgba(255, 255, 255 .7); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(255, 255, 255 .5); border-radius: 2. 5px;"}

Bild von [Allison Horst](https://allisonhorst.com/r-packages-functions).
:::

## ggplot2: Das Paket

\

[ggplot2](https://ggplot2.tidyverse.org/) gehört zum [tidyverse](https://www.tidyverse.org/)

```{r}
#install.packages("tidyverse")
library(tidyverse)
```

\

... kann aber natürlich auch seperat geladen werden:

```{r}
#install.packages("ggplot2")
library(ggplot2)
```

##  {background-image="images/babyfeet.jpg" background-size="1225px"}

::: {.absolute right="1.5%" top="1.5%" style="padding: 0.5em 0.5em; background-color: rgba(255, 255, 255, 0); backdrop-filter: blur(0px); box-shadow: 0 0 0rem 0 rgba(255, 255, 255, 0); color:#F8F8F8;"}
Erste Schritte.
:::


::: {.absolute right="0%" bottom="0%" style="font-size:0.25em; padding: 0.5em 0.5em; background-color: rgba(255, 255, 255, 0); backdrop-filter: blur(0px); box-shadow: 0 0 0rem 0 rgba(255, 255, 255, 0); color:#F8F8F8;"}

Foto von <a href="https://unsplash.com/de/@omarlopez1?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Omar Lopez</a> auf <a href="https://unsplash.com/de/fotos/person-die-babyfusse-halt-vTknj2OxDVg?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::


## Komponenten

Übersicht


## Daten vorstellen

```{r}
#| echo: false

# https://www.kaggle.com/datasets/jealousleopard/goodreadsbooks
# Clean, number of ratings but no genre data (but isbn is there, so could be added)
books <- read.csv("C:/Users/hafiznij/Downloads/archive(1)/books.csv") %>% 
  filter(ratings_count > 1000) %>% 
  mutate(average_rating = as.numeric(average_rating)) %>%  
  mutate(num_pages = as.numeric(num_pages)) 

books$pubdate <- mdy(books$publication_date)


ggplot(books, aes(x = num_pages, y = average_rating) )+
  geom_point() +
  geom_smooth(method = "lm")


ggplot(books, aes(x = pubdate, y = average_rating)) +
  geom_point() +
  geom_smooth()
### Best book per year


# chttps://www.kaggle.com/datasets/dylanjcastillo/7k-books-with-metadata
## Thumbnail enthalten!



# https://github.com/prasertcbs/basic-dataset/tree/master/book_ratings
books4 <- read.csv("C:/Users/hafiznij/Downloads/books(1).csv")
```

```{r}
#|echo: false
#|eval: false


# install.packages("tidytuesdayR")
library(tidytuesdayR)

tuesdata <- tidytuesdayR::tt_load('2022-08-16')


## Sowas wie Female Darstellung in Sitcoms over time? Also man köñnte sich schon interessante Zusammenhänge zwischen Darstellung von Figuren über die Zeti anschauen?

characters_psych <- tuesdata$psych_stats %>% 
  select(char_name, uni_name, personality, avg_rating) %>% 
  # filter(uni_name %in% c("Friends", "How I Met Your Mother", "Breaking Bad")) %>% 
  filter( personality %in% c("sexual", "bossy")) %>% 
  pivot_wider(names_from = personality, values_from = avg_rating)

ggplot(characters_psych, aes(x = sexual, y = bossy)) +
  geom_point() + 
  geom_smooth(method = "lm")

## Eventuell später mit PCA oder so interessant
  

# https://www.kaggle.com/datasets/nelgiriyewithana/countries-of-the-world-2023

```


```{r}
# install.packages('spotifyr')
library(spotifyr)
library(lubridate)


Sys.setenv(SPOTIFY_CLIENT_ID = 'b659f23a41964a1eb30033893df3e57f')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'd736f07b42a04805b4ba34a52ae55f33')

access_token <- get_spotify_access_token()

beatles <- get_artist_audio_features('the beatles')


get_my_recently_played(limit = 5) %>% 
    mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
           played_at = as_datetime(played_at)) %>% 
    select(track.name, artist.name, track.album.name, played_at)

my_plists <- get_user_playlists("nickha1234")

tracks <- get_playlist_tracks("7u6duSFjCraRposPGIZD6c")
get_track_audio_features(tracks$track.id[1])

get_artist("6gto7HVNhu4ARE3P3g8Y5Y")
get_track("0A36fhiySewWxiN2n2p0xq")
get_track_audio_features("0A36fhiySewWxiN2n2p0xq")

tuesdata <- tidytuesdayR::tt_load('2020-01-21') 
```


## The Big picture

```{r}
#| output-location: column
#| code-line-numbers: "1|2,3|4"

ggplot(data = books %>% filter(num_pages < 2000), 
       mapping = aes(x = num_pages, 
                     y = average_rating)) +
  geom_point() +
  geom_smooth(method = "lm")
```


# Start

## `ggplot()`
```{r}
#| output-location: column

ggplot()
```


## Daten

```{r}
#| output-location: column
ggplot(data = books)
```


## Aesthetic mapping

Um diese leere Leinwand zu befüllen, müssen wir die Daten mit den benötigten visuellen Eigenschaften verknüpfen: 

`mapping =  aes()`

Je nach Plot-Art sind verschiedene Visuelle Eigenschaften möglich. Wichtig ist für uns jetzt erst einmal die Position, also x - und y-Achsen.


## Aesthetic mapping: Achsen 

```{r}
#| output-location: column
#| code-line-numbers: "2,3"

ggplot(data = books, 
       mapping = aes(x = num_pages, 
                     y = average_rating))
```


## Geometric Layers
ggplots sind aus verschiedenen Layern aufgebaut, die mithilfe eines `+` übereinander gelegt werden.  

`geom_`

## Layer

```{r}
#| output-location: column
#| code-line-numbers: "4"

ggplot(data = books, 
       mapping = aes(x = num_pages, 
                     y = average_rating)) +
  geom_point()
```

```{r}
library(ggwordcloud)

ggplot(data = books %>% filter(average_rating > 4.5), 
       mapping = aes(label = title, 
                     size = average_rating)) +
  geom_text_wordcloud()
  

```


## Übung

```{r}

```



## Let's take a deeper dive
Hier dann nochmal genauer durchgehen - Was haben wir eigentlich gemacht. 
Nicht zu sehr in den Basics verlieren, auch schneller tiefer reingehen (scales, coord system ...)


## Abspeichern



## Farben 

https://questionsindataviz.com/2023/12/29/what-makes-a-truly-terrible-map/
