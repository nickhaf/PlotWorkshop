---
title: "ggplot2: Basics"
format: letterbox-revealjs
footer: 'Janine Birkholz & Nicklas Hafiz // Mai 2025'
execute: 
  fig-width: 5
  fig-height: 6
---

## {background-image="images/ggplot_art.png" background-size="1160px" background-position="15%"}

::: {.absolute right="0.5%" bottom="0.5%" style="font-size:0.25em; padding: 0.15em 0.15em; background-color: rgba(255, 255, 255 .7); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(255, 255, 255 .5); border-radius: 2. 5px;"}

Bild von [Allison Horst](https://allisonhorst.com/r-packages-functions).
:::

## ggplot2: Das Paket

\

[ggplot2](https://ggplot2.tidyverse.org/) gehört zum [tidyverse](https://www.tidyverse.org/)

```{r}
#install.packages("tidyverse")
library(tidyverse)
```

\

... kann aber natürlich auch seperat geladen werden:

```{r}
#install.packages("ggplot2")
library(ggplot2)
```

##  {background-image="images/babyfeet.jpg" background-size="1225px"}

::: {.absolute right="1.5%" top="1.5%" style="padding: 0.5em 0.5em; background-color: rgba(255, 255, 255, 0); backdrop-filter: blur(0px); box-shadow: 0 0 0rem 0 rgba(255, 255, 255, 0); color:#F8F8F8;"}
Erste Schritte.
:::


::: {.absolute right="0%" bottom="0%" style="font-size:0.25em; padding: 0.5em 0.5em; background-color: rgba(255, 255, 255, 0); backdrop-filter: blur(0px); box-shadow: 0 0 0rem 0 rgba(255, 255, 255, 0); color:#F8F8F8;"}

Foto von <a href="https://unsplash.com/de/@omarlopez1?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Omar Lopez</a> auf <a href="https://unsplash.com/de/fotos/person-die-babyfusse-halt-vTknj2OxDVg?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::


## Komponenten

Übersicht


## Daten vorstellen

could use the imbd data for season/episode popularity. 
Or some network plot with the actors, maybe which combinations have the best ratings. 
Return of investment by categorie, with naming outliers!
Life expectancy by country, with looking at outliers for example. 

```{r}
movies_metadat <- read.csv(here::here("data", "movies_metadata.csv")) %>% 
  mutate(budget = as.numeric(budget), 
         vote_average = as.numeric(vote_average)) %>% 
  filter(revenue > 0, budget > 0)

## Popularity over seasons
```


## Astronauts
```{r}
tuesdata <- tidytuesdayR::tt_load('2020-07-14')

astro <- tuesdata$astronauts
```


```{r}
ggplot(data = astro, 
       aes(x = year_of_mission, 
           y = hours_mission)) +
  geom_point() +
  geom_smooth()
```

```{r}
ggplot(data = astro, 
       aes(x = eva_hrs_mission, 
           y = hours_mission, 
           colour = sex)) +
  geom_point() 
```

```{r}
library(tidyverse)
library(here)
library(janitor)

# read in the specific category/field datasets and the overall winners

nobel_winners <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2019/2019-05-14/nobel_winners.csv")
nobel_winner_all_pubs <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2019/2019-05-14/nobel_winner_all_pubs.csv")

```


## The Big picture

```{r}
#| output-location: column
#| code-line-numbers: "1|2,3|4"

ggplot(data = movies_metadat, 
       mapping = aes(x = revenue, 
                     y = vote_average)) +
  geom_point() +
  geom_smooth()
```


# Start

## `ggplot()`
```{r}
#| output-location: column

ggplot()
```


## Daten

```{r}
#| output-location: column
ggplot(data = movies_metadat)
```


## Aesthetic mapping

Um diese leere Leinwand zu befüllen, müssen wir die Daten mit den benötigten visuellen Eigenschaften verknüpfen: 

`mapping =  aes()`

Je nach Plot-Art sind verschiedene Visuelle Eigenschaften möglich. Wichtig ist für uns jetzt erst einmal die Position, also x - und y-Achsen.


## Aesthetic mapping: Achsen 

```{r}
#| output-location: column
#| code-line-numbers: "2,3"

ggplot(data = movies_metadat, 
       mapping = aes(x = revenue, 
                     y = vote_average))
```


## Geometric Layers
ggplots sind aus verschiedenen Layern aufgebaut, die mithilfe eines `+` übereinander gelegt werden.  

`geom_`

## Layer

```{r}
#| output-location: column
#| code-line-numbers: "4"

ggplot(data = books, 
       mapping = aes(x = num_pages, 
                     y = average_rating)) +
  geom_point()
```

```{r}
library(ggwordcloud)

ggplot(data = books %>% filter(average_rating > 4.5), 
       mapping = aes(label = title, 
                     size = average_rating)) +
  geom_text_wordcloud()
  

```


## Übung

```{r}

```



## Let's take a deeper dive
Hier dann nochmal genauer durchgehen - Was haben wir eigentlich gemacht. 
Nicht zu sehr in den Basics verlieren, auch schneller tiefer reingehen (scales, coord system ...)


## Abspeichern



## Farben 

https://questionsindataviz.com/2023/12/29/what-makes-a-truly-terrible-map/
