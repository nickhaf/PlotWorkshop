---
title: "ggplot2: Basics"
format: letterbox-revealjs
footer: 'Janine Birkholz & Nicklas Hafiz // Mai 2025'
execute: 
  fig-width: 5
  fig-height: 6
---


```{r}
#| echo: false

library(here)
library(janitor)
library(ggwordcloud)
```

## {background-image="images/ggplot_art.png" background-size="1160px" background-position="15%"}

::: {.absolute right="0.5%" bottom="0.5%" style="font-size:0.25em; padding: 0.15em 0.15em; background-color: rgba(255, 255, 255 .7); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(255, 255, 255 .5); border-radius: 2. 5px;"}

Bild von [Allison Horst](https://allisonhorst.com/r-packages-functions).
:::

## ggplot2: Das Paket

\

[ggplot2](https://ggplot2.tidyverse.org/) gehört zum [tidyverse](https://www.tidyverse.org/)

```{r}
#install.packages("tidyverse")
library(tidyverse)


```

\

... kann aber natürlich auch seperat geladen werden:

```{r}
#install.packages("ggplot2")
library(ggplot2)
```

##  {background-image="images/babyfeet.jpg" background-size="1225px"}

::: {.absolute right="1.5%" top="1.5%" style="padding: 0.5em 0.5em; background-color: rgba(255, 255, 255, 0); backdrop-filter: blur(0px); box-shadow: 0 0 0rem 0 rgba(255, 255, 255, 0); color:#F8F8F8;"}
Erste Schritte.
:::


::: {.absolute right="0%" bottom="0%" style="font-size:0.25em; padding: 0.5em 0.5em; background-color: rgba(255, 255, 255, 0); backdrop-filter: blur(0px); box-shadow: 0 0 0rem 0 rgba(255, 255, 255, 0); color:#F8F8F8;"}

Foto von <a href="https://unsplash.com/de/@omarlopez1?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Omar Lopez</a> auf <a href="https://unsplash.com/de/fotos/person-die-babyfusse-halt-vTknj2OxDVg?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::


## Komponenten

Übersicht


## Daten vorstellen
```{r}
pop_world <- read.csv(here::here("raw_data", "pop.csv"))
co2_world <- read.csv(here::here("raw_data", "co2_pcap_cons.csv"))

colnames(co2_world) <- gsub("^X", "", colnames(co2_world)) 
co2_world[, 2:ncol(co2_world)] <- co2_world[, 2:ncol(co2_world)] %>% 
  mutate(across(everything(), ~ gsub("−", "-", as.character(.)))) %>% 
mutate_if(is.character, as.numeric) 

co2_world <- co2_world %>% 
  pivot_longer(cols = -country, 
               names_to = "year", 
               values_to = "co2")

```


```{r}
#| echo: false
library(rjson)


movies_metadat <- read.csv(here::here("data", "movies_metadata.csv")) %>% 
  mutate(budget = as.numeric(budget), 
         vote_average = as.numeric(vote_average), 
         popularity = as.numeric(popularity)) %>% 
  filter(revenue > 0, budget > 0)


extract_genres <- function(json_string) {
  json_string %>%
    str_replace_all("'", "\"") %>%   # Replace single quotes with double quotes
    fromJSON() %>%                   # Convert JSON string to list
    map_chr("name") %>%               # Extract "name" field
    paste(collapse = ", ")            # Combine into a single string
}

movies_metadat <- movies_metadat %>% 
  mutate(genres_clean = map_chr(genres, extract_genres)) %>% 
  separate_rows(genres_clean, sep = ", ")  # Split the column into multiple rows


```

## The Big picture


```{r}
#| output-location: column
#| code-line-numbers: "1|2,3|4"


```


# Start

## `ggplot()`
```{r}
#| output-location: column

ggplot()
```


## Daten

```{r}
#| output-location: column
ggplot(data = movies_metadat)
```


## Aesthetic mapping

Um diese leere Leinwand zu befüllen, müssen wir die Daten mit den benötigten visuellen Eigenschaften verknüpfen: 

`mapping =  aes()`

Je nach Plot-Art sind verschiedene visuelle Eigenschaften möglich. Wichtig ist für uns jetzt erst einmal die Position, also x - und y-Achsen.  
Es kann hier aber z.B. auch die Farbe der Punkte in Agnhängikeit von Kategorien in den Daten geändert werden. 


## Aesthetic mapping: Achsen 

```{r}
#| output-location: column
#| code-line-numbers: "2,3"

ggplot(data = movies_metadat, 
       mapping = aes(x = budget, 
                     y = vote_average))
```


## Geometric Layers
ggplots sind aus verschiedenen Layern aufgebaut, die mithilfe eines `+` übereinander gelegt werden.  

`geom_`

## Layers

```{r}
#| output-location: column
#| code-line-numbers: "4"

ggplot(data = movies_metadat, 
       mapping = aes(x = budget, 
                     y = vote_average)) +
  geom_point()
```

## Mehr Layers!
```{r}
#| output-location: column
#| code-line-numbers: "5"

ggplot(data = movies_metadat, 
       mapping = aes(x = budget, 
                     y = vote_average)) +
  geom_point() +
  geom_smooth()
```

## Titel/Labels
```{r}
#| output-location: column
#| code-line-numbers: "6|7|8|9|10"

ggplot(data = movies_metadat, 
       mapping = aes(x = budget, 
                     y = vote_average)) +
  geom_point() +
  geom_smooth() +
  labs(
    title = "Getting a bang for your buck: Are Movies with higher budget also better?",
    subtitle = "There doesn't seem to be a strong relation between movie budget and average rating.",
    x = "Movie budget",
    y = "Average vote"
  )
```


## Style deinen Plot: Themes

```{r}
#| output-location: column
#| code-line-numbers: "6|7|8|9|10"

ggplot(data = movies_metadat, 
       mapping = aes(x = budget, 
                     y = vote_average)) +
  geom_point() +
  geom_smooth() +
  labs(
    title = "Getting a bang for your buck: Are Movies with higher budget also better?",
    subtitle = "There doesn't seem to be a strong relation between movie budget and average rating.",
    x = "Movie budget",
    y = "Average vote"
  ) +
  theme_classic()
```

## Übung

::: {.panel-tabset}

## Aufgabe 
Erstelle ein eigenes Punktdiagramm. Nutze dafür andere Variablen im Datensatz `movies_metadat`. 
Vergib auch einen Titel, Achsen-Beschriftungen und suche ein [Theme](https://ggplot2.tidyverse.org/reference/ggtheme.html) aus. 

## Lösung

```{r}
ggplot(data = movies_metadat, 
       mapping = aes(x = budget, 
                     y = vote_average)) +
  geom_point() +
  geom_smooth() +
  labs(
    title = "Getting a bang for your buck: Are Movies with higher budget also better?",
    subtitle = "There doesn't seem to be a strong relation between movie budget and average rating.",
    x = "Movie budget",
    y = "Average vote"
  ) +
  theme_classic()
```

:::


## Let's take a deeper dive
Hier dann nochmal genauer durchgehen - Was haben wir eigentlich gemacht. 
Nicht zu sehr in den Basics verlieren, auch schneller tiefer reingehen (scales, coord system ...)





## Abspeichern



## Farben 

https://questionsindataviz.com/2023/12/29/what-makes-a-truly-terrible-map/
