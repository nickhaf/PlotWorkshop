---
title: "Einführung"
format: letterbox-revealjs
---

```{r}
#| echo: false

library(quartets)
library(tidyverse)
library(ggrepel)
source(here::here("src", "themes.R"))
```




# Plotting


# Motivation


## Datasaurus Dozen ([`quartets`-Paket](https://github.com/r-causal/quartets))

```{r}
#| echo: false

datasaurus_dozen |>
  group_by(dataset) |>
  summarise(mean_x = mean(x),
            var_x = var(x),
            mean_y = mean(y),
            var_y = var(y),
            cor = cor(x, y)) |>
  knitr::kable(digits = 2)
```

## 

```{r}
#| echo: false
#| fig-height: 8
#| fig-width: 12

ggplot(datasaurus_dozen, aes(x = x, y = y)) +
  geom_smooth(method = "lm", formula = "y ~ x") +
  facet_wrap(~dataset) +
  theme_bg() +
  ylim(0, 100)

```

## 

```{r}
#| echo: false
#| fig-height: 8
#| fig-width: 12


ggplot(datasaurus_dozen, aes(x = x, y = y)) +
  geom_smooth(method = "lm", formula = "y ~ x") +
  facet_wrap(~dataset, ncol = 5) +
  geom_point() +
  theme_bg() +
  ylim(0, 100)


```


## Warum ggplot2?

## Einfach!
- Simple, schnelle Beispiele


## Beautiful
- Beispiele verschönert


# Gallerie {background-image="images/gallery.jpg" background-size="1225px"}

## Eine der ersten Karten  {background-color="white"}

::: {.columns}
::: {.column width="40%"}
Dr. John Snow zeichnete die Todesfälle durch Cholera in Zentral-London im September 1854 auf.  
[Wasserpumpen wurden mit einem `x` markiert.]{.highlight}  
Dadurch ließ sich die [Broad Street Pumpe]{.highlight} als Quelle der Epidemie identifizieren. 
:::
::: {.column width="60%"}
![](./images/cholera_chart.png)
:::
:::

::: image-ref
Bild von [ReserachGate](https://www.researchgate.net/figure/Cholera-outbreak-in-London-in-1854-Deaths-marked-with-dots-Water-wells-marked-with-a_fig9_320654812)
:::

## {background-color="white"}

:::{.columns}
::: {.column width="100%"}

![](./images/password.png)

:::
:::

::: image-ref
Beispiel aus der [The R Graph Gallery](https://r-graph-gallery.com/web-circular-lollipop-plot-with-ggplot2.html). 
:::



## Der best Plot jemals?

![](images/napoleon.png)


Verluste der napoleonischen Armee beim Russlandfeldzug 1812–1813, von Charles Joseph Minard. 
Es werden [6 Dimensionen]{.highlight} dargestellt!    


::: image-ref
Image from [Wikipedia](https://en.wikipedia.org/wiki/File:Minard.png). 
:::


## 

```{r}
#| echo: false
#| eval: false

# Load dataset from github (Surfer project)
data <- read.table("https://github.com/holtzy/data_to_viz/raw/master/Example_dataset/19_MapConnection.csv", header=T, sep=",")

# Download NASA night lights image
download.file("https://raw.githubusercontent.com/holtzy/data_to_viz/master/story/IMG/BlackMarble_2016_01deg.jpg",  destfile = "sessions/Einführung/images/BlackMarble_2016_01deg.jpg", mode = "wb")

# Count how many times we have each unique connexion + order by importance
summary=data %>% 
  dplyr::count(homelat,homelon,homecontinent, travellat,travellon,travelcontinent) %>%
  arrange(n)

# A function that makes a dateframe per connection (we will use these connections to plot each lines)
data_for_connection=function( dep_lon, dep_lat, arr_lon, arr_lat, group){
  inter <- geosphere::gcIntermediate(c(dep_lon, dep_lat), c(arr_lon, arr_lat), n=50, addStartEnd=TRUE, breakAtDateLine=F)             
  inter=data.frame(inter)
  inter$group=NA
  diff_of_lon=abs(dep_lon) + abs(arr_lon)
  if(diff_of_lon > 180){
    inter$group[ which(inter$lon>=0)]=paste(group, "A",sep="")
    inter$group[ which(inter$lon<0)]=paste(group, "B",sep="")
  }else{
    inter$group=group
  }
  return(inter)
}

# Création d'un dataframe complet avec les points de toutes les lignes à faire.
data_ready_plot=data.frame()
for(i in c(1:nrow(summary))){
  tmp=data_for_connection(summary$homelon[i], summary$homelat[i], summary$travellon[i], summary$travellat[i] , i)
  tmp$homecontinent=summary$homecontinent[i]
  tmp$n=summary$n[i]
  data_ready_plot=rbind(data_ready_plot, tmp)
}
data_ready_plot$homecontinent=factor(data_ready_plot$homecontinent, levels=c("Asia","Europe","Australia","Africa","North America","South America","Antarctica"))

saveRDS(data_ready_plot, "./sessions/Einführung/surfdata.rds")

```

```{r}
#| echo: false
#| eval: false

library(jpeg)

# Load picture and render
earth <- jpeg::readJPEG("./images/worldmap.jpg", native = TRUE)
earth <- grid::rasterGrob(earth, interpolate = TRUE)

data_ready_plot <- readRDS("./surfdata.rds")
# Plot
p <- ggplot() +
  annotation_custom(earth, xmin = -180, xmax = 180, ymin = -90, ymax = 90) +
  geom_line(data=data_ready_plot, aes(x=lon, y=lat, group=group, colour=homecontinent, alpha=n), size=0.3) +
  scale_color_brewer(palette="Set3") +
  theme_void() +
  theme(
        legend.position="none",
        panel.background = element_rect(fill = "black", colour = "black"), 
        panel.spacing=unit(c(0,0,0,0), "null"),
        plot.margin=grid::unit(c(0,0,0,0), "cm"),
  ) +
  ggplot2::annotate("text", x = -150, y = -45, hjust = 0, size = 8, label = paste("Where surfers travel."), color = "white") +
  ggplot2::annotate("text", x = -150, y = -51, hjust = 0, size = 5, label = paste("data-to-viz.com | NASA.gov | 10,000 #surf tweets recovered"), color = "white", alpha = 0.5) +
  #ggplot2::annotate("text", x = 160, y = -51, hjust = 1, size = 7, label = paste("Cacedédi Air-Guimzu 2018"), color = "white", alpha = 0.5) +
  xlim(-180,180) +
  ylim(-60,80) +
  scale_x_continuous(expand = c(0.006, 0.006)) +
  coord_equal() 

p
```


::: image-ref

Code von [https://www.data-to-viz.com/story/MapConnection.html].

:::



# {background-image="images/setup.jpg" background-size="1225px"}

::: {.absolute left="5%" top="5%" style="color:#F8F8F8;"}
Basic Setup
:::

::: image-ref
Foto von <a href="https://unsplash.com/de/@adigold1?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Adi Goldstein</a> auf <a href="https://unsplash.com/de/fotos/graustufenfotografie-eines-mannes-im-gestreiften-hemd-rgkKFn5Ysb0?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::




## RStudio Projekte

Hilft ungemein beim Organisieren von Dateien und Code!


\

::: {.exercise}
Erstelle ein RStudio Projekt in einem Ordner für diesen Workshop.
:::


## Pfade

[here](https://here.r-lib.org/) ist ein Paket zum Erstellen von Dateipfaden. 
Dadurch können Probleme mit relativen und absoluten Pfaden vermieden werden. 

`C:\Users\hafiznij\Documents\GitHub\IRT_workshop\data\gapminder_dat.rds` wird zu:  
`here::here("data", "gapminder_dat.rds")`. 


::: {.panel-tabset}

### Übung

::: {.exercise}

Lade die gapminder-Daten von [GitHub](https://github.com/nickhaf/PlotWorkshop/blob/main/data/gapminder_dat.rds) herunter und in R ein. 

:::



### Lösung

```{r}
# install.packages("here")
gapminder <- readRDS(here::here("data", "gapminder_dat.rds"))
```

:::

## Daten

:::{.columns}
:::{.column width = "50%"}


\
\

[Gapminder](https://www.gapminder.org/tools/#$chart-type=bubbles&url=v2) ist ein non-profit Projekt mit dem Ziel, mit [global misconceptions]{.highlight} aufzuräumen. 
Grundlage dafür ist ein Datensatz mit sozioökonomischen Indikatoren für fast alle Länder der Welt über mehrere Jahrzehnte. 


:::
:::{.column width = "50%"}


![](./images/factfulness.jpg){.image-right}

:::
:::

::: image-ref
Bild von [Amazon](https://m.media-amazon.com/images/I/71KH-wJcv3L.jpg). 
:::


## Quiz {background-image="images/world.jpg" background-size="1225px"}

::: {.exercise}
Öffne [Mentimeter](https://www.mentimeter.com/app/presentation/alep3cierpqrz5cwkm6v2ege1h1tvhbi/edit?question=nw21zffqg1ti) und bearbeite das Quiz. 
:::

::: image-ref
Fragen von [Gapminder](https://upgrader.gapminder.org/).  
Foto von <a href="https://unsplash.com/de/@nasa?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">NASA</a> auf <a href="https://unsplash.com/de/fotos/foto-aus-dem-weltraum-Q1p7bh3SHj8?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
      
:::



# Plot-Typen

## Scatterplot

::: {.panel-tabset}

### Plot
```{r}
#| label: example-scatter
#| fig-width: 14
#| fig-height: 7
#| echo: false

gapminder_2019 <- gapminder %>% 
  filter(time == 2019)
  
p_scatter <- ggplot(data = gapminder_2019, aes(x = gini, y = hapiscore_whr, color = world_4region)) +
  geom_point(size = 3) 

p_scatter

```

### Code

```{r}
#| label: example-scatter
#| eval: false
```


:::

## Scatterplot
::: {.columns}
:::{.column width = "50%"}

:::{.steckbrief}
[Datentyp]{.highlight}  Numerisch

[Achtung]{.highlight} Overplotting


:::

:::{.tag}
[Link test](https://quarto.org/docs/reference/formats/html.html)
:::

:::
:::{.column width = "50%"}
```{r}
#| echo: false

p_scatter

```
:::
:::



## Barplot
::: {.panel-tabset}

### Plot
```{r}
#| label: example-bar
#| fig-width: 14
#| fig-height: 7
#| echo: false

gapminder_2019_bar <- gapminder_2019 %>% 
  filter(world_6region == "europe_central_asia") %>% 
drop_na(unicode_region_subtag, gini)

p_bar <- ggplot(data = gapminder_2019_bar, aes(x = reorder(unicode_region_subtag, gini), y = gini)) +
  geom_bar(stat = "identity", color = "black", fill = "#F4BA02") +
  theme_bg()

p_bar

```

### Code

```{r}
#| label: example-bar
#| eval: false
```


:::

## Barplot
::: {.columns}
:::{.column width="50%"}

:::{.steckbrief}
[Datentyp]{.highlight}  

[Achtung]{.highlight} 

:::
:::{.column width="50%"}

:::
:::


## Histogram

## Lineplot

::: {.panel-tabset}

### Plot
```{r}
#| label: example-line
#| fig-width: 14
#| fig-height: 7
#| echo: false

gapminder_line <- gapminder %>% 
  filter(country %in% c("deu"), time >=1900, time <= 2024) %>% 
  drop_na(gini)

p_line <- ggplot(data = gapminder_line, aes(x = time, y = gini)) +
geom_line() +  
theme_bg() +
labs(title = "Ungleichheit in Deutschland On the Rise", 
     subtitle = "Gini-Koeffizient von 1900 bis 2024",
     x = "Jahr",
     y = "Gini-Koeffizient")

p_line

```

### Code

```{r}
#| label: example-line
#| eval: false
```

:::


## Lineplot
::: {.columns}
:::{.column width="50%"}

:::{.steckbrief}
[Datentyp]{.highlight}  

[Gut für]{.highlight} Zeitreihen

[Achtung]{.highlight} 

:::

:::{.column width="50%"}

:::
:::

## Boxplot

## Karten

## Spider-Chart

## Kombiniert
- Co2 with grey scale
- greens with green scale

# Plotly

## gganimate

## Generative Art


## {background-image="images/habeck.jpeg" background-size="1225px"}}

::: image-ref
Bild von [Static](https://static.ksta.de/__images/2025/04/24/b3b17a0b-1da5-4e0f-9d6e-d321b248e1fa.jpeg?q=75&q=70&rect=0,259,4000,2250&w=2000&h=1334&fm=jpeg&s=cd6fd9eb8760f10aad114f59d21d74ce).
:::

