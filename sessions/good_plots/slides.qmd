---
title: "Was ist eine gute Grafik?"
format: 
  letterbox-revealjs:
    code-block-height: 650px
bibliography: refs.bib
---


```{r}
#| label: Load pacakges
#| echo: false

library(here)
library(janitor)
library(ggwordcloud)
library(ggrepel)
library(ggtext)
library(tidyverse)
source(here::here("src", "themes.R"))
source(here::here("src", "functions.R"))
```


```{r}
#| echo: false
#| message: false
#| label: Load gapminder data

gapminder <- readRDS(here::here("data", "gapminder_dat.rds"))
```

## 
Excellence in statistical graphics consists of complex ideas communicated with clarity, precision, and efficiency. [@tufte2001visualizing]

- show the data
- induce the viewer to think about the substance rather than about methodology, graphic design, the technology of graphic production, or something else
- avoid distorting what the data have to say
- present many numbers in a small space
- make large datasets coherent
- encourage the eye to compare different pieces of data
- Reveal the data at several levels of detail, from a broad overview to the fine structure
- serve a reasonably clear purpose: description, exploration, tabulation, or decoration
- be closely integrated with the statistical and verbal descriptions of a data set



## 

![](./images/mcCandless.png)

::: image-ref
Darstellung von David McCandless in [Knowledge is Beautiful (2014)](https://informationisbeautiful.net/visualizations/what-makes-a-good-data-visualization/).
:::




## What makes a bad plot? 

::: {.columns}
::: {.column width="50%"}

::: {.exercise}

Jede Gruppe bekommt eine Abbildung. 

1. Diskutiert in der Gruppe, was bei der Visualisierung schief läuft. 
1. Session
1. Kurze Diskussion. Stellt den anderen Gruppen eure Ergebnisse vor.

:::

::: 
::: {.column width="50%"}
![](./images/star_plot.jpeg)

:::
:::


::: {.image-ref}
Bild gefunden auf [Reddit](https://www.reddit.com/r/dataisugly/comments/1msd4v2/its_not_wrong_but_i_still_hate_it/). 
:::


# Informationen

::: {.columns}
:::{.column width="50%"}

- Integrität der [Datenquelle]{.highlight}
- Integrität der [Darstellung]{.highlight}

:::
::: {.column width="50%"}
![](./images/news.jpg){.image-right}
:::
:::

::: {.image-ref}
Foto von <a href="https://unsplash.com/de/@humayardim?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Hümâ H. Yardım</a> auf <a href="https://unsplash.com/de/fotos/menschen-die-tagsuber-auf-schneebedecktem-boden-spazieren-gehen-gfZZViTxuqw?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>

:::


## Integrität der Daten: Garbage in, garbage out 

::: {.columns}
:::{.column width="50%"}

- [Scheinkorrelationen](https://tylervigen.com/spurious-correlations)
- [Wrong data, wrong measurements, wrong interpretations ...](https://www.businessinsider.com/spinach-iron-levels-nutrition-myths-2017-6)
- [Sloppy research](https://journals.sagepub.com/doi/full/10.1177/0306312714535679)
  - P-Hacking
  - Cherry Picking
  
:::
::: {.column width="50%"}

![](./images/garbage_hochkant.jpg){.image-right}

:::
:::


::: image-ref
Foto von <a href="https://unsplash.com/de/@jilburr?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Jilbert Ebrahimi</a> auf <a href="https://unsplash.com/de/fotos/schwarzer-plastikmulleimer-mit-radern-neben-der-wand-b0p818k8Ok8?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>. 
:::


## Fehlender Kontext

::: {.columns}
:::{.column width="50%}
```{r}
#| echo: false

gapminder_2020 <- gapminder %>%
  filter(time == 2020) %>%
  arrange(desc(co2_cons))

ggplot(
  gapminder_2020[1:10, ],
  aes(x = reorder(country, co2_cons), y = co2_cons)
) +
  geom_bar(stat = "identity", width = 1, color = "black", fill = "#208C7A") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(
    x = "Land",
    y = "CO2 Consumption in 1000 t",
    title = "China burns the most CO2!"
  ) +
  theme_bg()
```
:::

:::{.column width="50%}
::: {.fragment}
```{r}
#| echo: false

gapminder_2020 <- gapminder %>%
  filter(time == 2020) %>%
  arrange(desc(co2_pcap_cons))

ggplot(
  gapminder_2020[1:10, ],
  aes(x = reorder(country, co2_pcap_cons), y = co2_pcap_cons)
) +
  geom_bar(stat = "identity", width = 1, color = "black", fill = "#208C7A") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(
    x = "Land",
    y = "CO2 Consumption per capita in t",
    title = "In China leben auch die meisten Menschen!"
  ) +
  theme_bg()
```
:::
:::
:::


## Geldwerte 
- Wenn über Jahre verglichen wird: Inflationsbereinigen!


## {background-color="white"}

:::{.columns}

:::{.column width="10%"}

:::
:::{.column width="80%"}
![](./images/impeach.png){width="85%"}

:::
:::{.column width="10%"}

:::

:::

::: image-ref
Siehe [storymaps](https://storymaps.arcgis.com/stories/0e636a652d44484b9457f953994b212b).
:::


## {background-color="white"}

::: {.quote}
"Land doesn't vote ... People Do."
:::


:::{.columns}
::: {.column width="100%"}
![](images/land_doesnt_vote.png)
:::
:::

:::{.image-ref}
Siehe [storymaps](https://storymaps.arcgis.com/stories/0e636a652d44484b9457f953994b212b).
:::

## Daten in Kontext setzen

::: {.panel-tabset}

### Übung

::: {.exercise}

Zeichne [Mittelwerte]{.highlight}, oder [hebe hervor]{.highlight} aus einer Vergleichsmenge, z.B. europäischer Länder. 
Am einfachsten geht das mit einem zweiten Datensatz, der alle europäischen Länder enthält:

```{r}
#| eval: false

gapminder_line <- gapminder %>%
  filter(country %in% c("deu"), time >= 1900, time <= 2024) %>%
  drop_na(gini)

 ggplot(data = gapminder_line, aes(x = time, y = gini)) +
  geom_line(aes(group = country))
```


:::{.callout-tip}

**Hinweis**

```{r}
#| code-fold: true


## Bilde einen eignen Datensatz, der alle europöischen Lönder enthält

gapminder_europe <- gapminder %>%
  filter(world_4region == "europe", time >= 1900, time <= 2024) %>%
  drop_na(gini)

```

:::

::: 

### Lösung


::: {.panel-tabset}

### Plot

```{r}
#| echo: false
#| label: gini_europe
#| fig-width: 14

gapminder_line <- gapminder %>%
  filter(country %in% c("deu"), time >= 1900, time <= 2024) %>%
  drop_na(gini)

gapminder_europe <- gapminder %>%
  filter(world_4region == "europe", time >= 1900, time <= 2024) %>%
  drop_na(gini)


p_line <- ggplot(data = gapminder_line, aes(x = time, y = gini)) +
  geom_line(data = gapminder_europe, aes(x = time, y = gini, group = country), color = "lightgrey", alpha = 0.5) +
  geom_smooth(color = "black") +
  geom_line(color = "#F4BA02", linewidth = 2) +
  theme_bg() +
  labs(
    title = "Ungleichheit in Europa On the Rise",
    subtitle = "1900 bis 2024, Gelbe Linie zeigt Deutschland",
    x = "Jahr",
    y = "Gini-Koeffizient"
  )

p_line
```

### Code
```{r}
#| label: gini_europe
#| eval: false
```

:::


:::


## Daten in Kontext setzen

::: {.panel-tabset}

### Plot

```{r}
#| echo: false
#| label: gini_europe2
#| fig-width: 14


gapminder_line <- gapminder %>%
  filter(country %in% c("deu"), time >= 1900, time <= 2024) %>%
  drop_na(gini)

gapminder_europe <- gapminder %>%
  filter(world_4region == "europe", time >= 1900, time <= 2024) %>%
  drop_na(gini)


p_line <- ggplot(data = gapminder_line, aes(x = time, y = gini)) +
  geom_line(data = gapminder_europe, aes(x = time, y = gini, group = country), color = "lightgrey", alpha = 0.5) +
  geom_smooth(color = "black") +
  geom_line(color = "#F4BA02", linewidth = 2) +
  theme_bg() +
  labs(
    title = "Ungleichheit in Europa On the Rise",
    subtitle = "1900 bis 2024, Gelbe Linie zeigt Deutschland",
    x = "Jahr",
    y = "Gini-Koeffizient"
  )

p_line
```

### Code
```{r}
#| label: gini_europe2
#| eval: false
```

:::

## Achsen {background-image="images/axis.jpg"}

::: image-ref
Foto von <a href="https://unsplash.com/de/@fi_66?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Joerg Fielenbach</a> auf <a href="https://unsplash.com/de/fotos/ein-bundel-rohre-die-nebeneinander-liegen-_WRbFUZ0SrE?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
      
:::


## Konventionen

::: fragment
::: {.callout-important}
Konventionen beachten! Die y-Achse sollte bspw. in der Regel bei 0 beginnen.
:::
:::

::: {.columns}
::: {.column width="50%"}
![](./images/florida.jpeg){width="75%"}
:::
::: {.column width="50%"}

::: {.small}
776.013 Home protection; use or threatened use of deadly force; presumption of fear of death or great bodily harm.—
(1) A person who is in a dwelling or residence in which the person has a right to be has no duty to retreat and has the right to stand his or her ground and use or threaten to use:  
(a) Nondeadly force against another when and to the extent that the person reasonably believes that such conduct is necessary to defend himself or herself or another against the other’s imminent use of unlawful force; or  
(b) Deadly force if he or she reasonably believes that using or threatening to use such force is necessary to prevent imminent death or great bodily harm to himself or herself or another or to prevent the imminent commission of a forcible felony.

([Florida Satutes](http://www.leg.state.fl.us/statutes/index.cfm?App_mode=Display_Statute&URL=0700-0799/0776/Sections/0776.013.html))

:::
:::
:::


## Manipulation des Bildformats


```{r}
#| label: example-weight
#| fig-width: 14
#| fig-height: 7
#| echo: false

set.seed(42)
my_weight <- data.frame(
  month = factor(c("Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"),
    levels = c("Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"),
    ordered = TRUE
  ),
  weight = rnorm(12, 90, 5) / 1000,
  group = rep(1, 12)
)

ggplot(
  my_weight,
  aes(x = month, y = weight, group = group)
) +
  geom_point() +
  geom_line() +
  labs(
    title = "Mein Gewicht 2024",
    subtitle = "In metrischen Tonnen",
    x = "Monat",
    y = "Gewicht in t"
  ) +
  ylim(0, 1000) +
  theme_bg() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```




## Reales Beispiel für Manipulation des Bildformates {background-color="white"}

::: {.quote}
The designer of the visualization, by selecting a y-axis starting point, has control over the subjective importance of the resulting differences.  
[@correll2020truncating]
:::


::: {.columns}
::: {.column width="100%"}
![](./images/gee-whiz.png){width="90%"}
:::
:::

::: image-ref
Grafik aus @HuffDarrell1979Htlw, heruntergeladen von [Observable blog](https://observablehq.com/blog/never-okay-crop-y-axis-except-when-it-is).
:::


## Soll die Null geplottet werden?

:::{.columns}
:::{.column width="50%"}

```{r}
#| echo: false

ggplot(data = gapminder_line, aes(x = time, y = gini)) +
  geom_smooth(color = "black") +
  geom_line(color = "#F4BA02", linewidth = 2) +
  theme_bg() +
  labs(
    title = "Ungleichheit in Deutschland On the Rise!",
    subtitle = "1900 bis 2024, schwarze Linie zeigt europäischen Durchschnitt",
    x = "Jahr",
    y = "Gini-Koeffizient"
  )
```

:::
:::{.column width="50%"}
```{r}
#| echo: false

ggplot(data = gapminder_line, aes(x = time, y = gini)) +
  geom_smooth(color = "black") +
  geom_line(color = "#F4BA02", linewidth = 2) +
  theme_bg() +
  labs(
    title = "Ungleichheit in Deutschland relativ stabil",
    subtitle = "1900 bis 2024, schwarze Linie zeigt europäischen Durchschnitt",
    x = "Jahr",
    y = "Gini-Koeffizient"
  ) +
 coord_cartesian(ylim=c(0,100))
```

:::
:::

## Absolute Werte

Die Null sollte in der Regel mitgeplottet werden, da wir uns Mengen anschauen. 

:::{.columns}
:::{.column width="50%"}

```{r}
#| echo: false

gapminder_2020 <- gapminder %>%
  filter(time == 2020) %>%
  arrange(desc(co2_pcap_cons))

ggplot(
  gapminder_2020[1:10, ],
  aes(x = reorder(country, co2_pcap_cons), y = co2_pcap_cons)
) +
  geom_bar(stat = "identity", width = 1, color = "black", fill = "#208C7A") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "CO2 consumption per capita in the biggest emmiting countries") +
  coord_cartesian(ylim = c(15, 25)) +
  theme_bg()
```

:::
:::{.column width="50%"}
```{r}
#| echo: false

ggplot(
  gapminder_2020[1:10, ],
  aes(x = reorder(country, co2_pcap_cons), y = co2_pcap_cons)
) +
  geom_bar(stat = "identity", width = 1, color = "black", fill = "#208C7A") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "CO2 consumption per capita in the biggest emmiting countries") +
  theme_bg()
```

:::
:::

## Veränderung der Werte

Hier ist es eher eine **Ermessensfrage**:

::: {.columns}
:::{.column width="50%"}
\
\
::: {.quote}
"If zero is in the neighborhood, invite it in!" 
([Andrew Gelman](https://statmodeling.stat.columbia.edu/2021/12/17/graphing-advice-if-zero-is-in-the-neighborhood-invite-it-in/))
:::

:::
::: {.column width="50%"}

\
\

::: {.quote}
In general, in a time-series, use a baseline that shows the data not the zero point
(Edward Tufte)
:::
:::
:::


## Veränderung der Werte
::: {.columns}
:::{.column width="50%"}

```{r}
#| echo: false

gapminder_2020_de <- gapminder %>%
  filter(time >= 2000, time <= 2022, country == "deu") %>%
  arrange(desc(co2_pcap_cons))


ggplot(
  gapminder_2020_de,
  aes(x = time, y = co2_pcap_cons, group = country, colour = country)
) +
  geom_line(linewidth = 1.5) +
  theme_bg() +
  ylim(9, 14) +
  scale_color_manual(values = "#208C7A") +
  labs(title = "CO2 consumption per capita in Germany")
```

:::

:::{.column width="50%"}

```{r}
#| echo: false

ggplot(
  gapminder_2020_de,
  aes(x = time, y = co2_pcap_cons, group = country, colour = country)
) +
  geom_line(linewidth = 1.5) +
  theme_bg() +
  ylim(0, 15) +
  scale_color_manual(values = "#208C7A") +
  labs(title = "CO2 consumption per capita in Germany")
```

:::
:::

## Schneiden von Achsen

::: {.callout-warning}
In der Regel keine gute Idee! Verzerrt die Skala. 
:::

:::{.columns}
:::{.column width="50%}

```{r}
#| echo: false

library(ggbreak)


gapminder_2020 <- gapminder %>%
  filter(time == 2020) %>%
  arrange(desc(co2_cons))

ggplot(
  gapminder_2020[1:10, ],
  aes(x = reorder(country, co2_cons), y = co2_cons)
) +
  geom_bar(stat = "identity", width = 1, color = "black", fill = "#208C7A") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "CO2 consumption per capita in the biggest emmiting countries") +
  scale_y_break(c(1500, 5000)) +
  theme_bg()
```
:::


:::{.column width="50%}
::: fragment
```{r}
#| echo: false


gapminder_2020 <- gapminder %>%
  filter(time == 2020) %>%
  arrange(desc(co2_cons))

ggplot(
  gapminder_2020[1:10, ],
  aes(x = reorder(country, co2_cons), y = co2_cons)
) +
  geom_bar(stat = "identity", width = 1, color = "black", fill = "#208C7A") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "CO2 consumption per capita in the biggest emmiting countries") +
  theme_bg()
```
:::
:::
:::


# Story


::: {.columns}

::: {.column width="50%"}

::: {.quote}
Just as writing is made more compelling by a [strong narrative]{.highlight}, this principle also applies to the accompanying figures. ([nature methods](https://www.nature.com/articles/nmeth.2571)) 
:::


:::

::: {.column width="50%"}
![](images/library.jpg){.image-right}

:::
:::


::: {.image-ref}
Foto von <a href="https://unsplash.com/de/@henry_be?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Henry Be</a> auf <a href="https://unsplash.com/de/fotos/bibliotheksregal-in-der-nahe-der-schwarzen-holzleiter-lc7xcWebECc?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::


## Story-Arc

- Episodische Grafik, lass es sich entfalten. 
- “If your study were reported in the newspaper, what would the headline be?”



## Zusätzliche Informationen einbauen

::: {.panel-tabset}

### Plot

```{r}
#| label: line_labels
#| fig-width: 14
#| fig-height: 7
#| echo: false

gapminder_line <- gapminder %>%
  filter(country %in% c("deu"), time >= 1900, time <= 2024) %>%
  drop_na(gini)

steuer <- gapminder_line %>%
  filter(time %in% c(1914, 1920, 1939, 1945, 1974, 1990, 1991, 1996, 2020), country == "deu") %>%
  arrange(time) %>%
  mutate(label = c( "Beginn 1. WK", "Reichseinkommensteuer", "Beginn 2. WK", "Starke Anhebung durch Alliiert", "Einkommenssteuerreformgesetz", "Wiedervereinigung", "Linear-Progressiver Tarif", "Anhebung Freibetrage", "Corona"))

p_line <- ggplot(data = gapminder_line, aes(x = time, y = gini)) +
theme_bg_dark() +
  geom_line(data = gapminder_europe, aes(x = time, y = gini, group = country), color = "#F8F8F8", alpha = 0.2) +
  geom_line(color = "#F4BA02", linewidth = 2) +
  geom_point(data = steuer) +
  geom_text_repel(data = steuer, aes(label = label), nudge_x = c(20, 25, 10, -5, 0, 0, -10), nudge_y = c(2, 2, 2, -2, 1, -2, 1), 
color = "#F4BA02") +
  labs(
    title = "Ungleichheit in Deutschland On the Rise?",
    subtitle = "Gini-Koeffizient von 1850 bis 2024",
    x = "Jahr",
    y = "Gini-Koeffizient"
  ) +
  geom_richtext(
    data = data.frame(
      x = 1900, y = 20,
      label = "<b>Gini-Koeffizient</b>: <br> Maß für Ungleichheit. <br> In diesem Fall Einkommen.<br>0 = vollkommen gleich <br> 100 = maximal ungleich."
    ),
    aes(x, y, label = label),
    hjust = 0, vjust = 0,
    fill = "#F4BA02", label.color = "#01364C",
    label.r = grid::unit(3, "pt"),
    size = 5
  ) 

p_line

## Add a plot on vermogen!! Evtl. einfach den Gini Koeffizienten fur ein Paar Jahre, die ich habe

## https://www.econtribute.de/RePEc/ajk/ajkpbs/ECONtribute_PB_001_2020.pdf
```

### Code
```{r}
#| label: line_labels
#| eval: false

```

:::

## Vergleichen


::: {.panel-tabset}

### Plot
```{r}
#| label: merged_lineplot
#| echo: false


# 
# World Inequality Lab – Working Paper N° 2022/09
# Wealth and its Distribution in Germany,
# 1895-2018

df <- data.frame(
  year = c(1895,1900,1905,1910,1915,1920,1925,1930,1935,1940,
           1945,1950,1955,1960,1965,1970,1975,1980,1985,1990,
           1995,2000,2005,2010,2015,2018),
  top1_share_percent = c(46,47,47.5,48,47.5,45,36,41,38,33,
                         28,23,22,23,21,24,28,27,26,25.5,
                         26,27,26.5,28.5,27,28)
)

ggplot(df, aes(year, top1_share_percent)) +
geom_line()+
geom_point() +
ylim(c(0, 50))



dat_eink <- data.frame(
country = rep(c("Schweiz", "Deutschland", "Österreich"), 4), 
Steuer = c(rep("Erbschaft", 3), rep("Vermögen", 3), rep("Konsum", 3), rep("Unternehmen", 3)),
anteil = c(1, 0, 1, 7, 0, 0, 26, 41, 43, 15, 12, 10))

p_bar <- ggplot(dat_eink, aes(x = reorder(Steuer, anteil), y = anteil, fill = Steuer)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(vars(country)) +
  theme_bg() +
  labs(
    title = "Steueraufkommen in % des BIP",
    subtitle = "Haushaltsjahr 2022",
    x = "Steuerart",
    y = "Anteil am BIP in %"
  ) +
  geom_text(aes(label = anteil), 
            position = position_dodge(width = 0.9), 
            vjust = -0.25) +
theme_bg_dark()


# https://www.wsi.de/de/blog-17857-vermoegensteuer-geht-die-schweiz-widerlegt-den-mythos-vom-unmoeglichen-68853.htm


gapminder_usa <- gapminder %>%
  filter(country %in% c("usa"), time >= 1850, time <= 2024) %>%
  drop_na(gini)

p_line_usa <- ggplot(data = gapminder_usa, aes(x = time, y = gini, color = country)) +
  geom_line() +
  theme_bg() +
  labs(
    title = "Einkommens- und Erbschaftssteuer in den USA",
    subtitle = "Gini-Koeffizient von 1850 bis 2024",
    x = "Jahr",
    y = "Gini-Koeffizient"
  ) +
  geom_richtext(
    data = data.frame(
      x = 1850, y = 30,
      label = "Zwischen 1930 und 1980 wurden in den Vereinigten Staaten die höchsten Einkommen durchschnittlich mit 81 Prozent besteuert und die größten vererbten Vermögen mit 74 Prozent."
    ),
    aes(x, y, label = label),
    inherit.aes = FALSE,
    hjust = 0, vjust = 0,
    fill = "white", label.color = "black",
    label.r = grid::unit(3, "pt"),
    size = 3.5
  ) +theme_bg_dark()





## Eine Vermogenssteuer hat das potenzial, Ungleichheit zu reduzieren, und die Abgabenlast von Konsumsteuern zu reduzieren. 
## Die USA hatten in den 80 Jahren eine 80% Vermogenssteuer. 


library(patchwork)


p_line +
annotation_custom(ggplotGrob(p_bar),
                              xmin = 1980, ymin = 43,
                              xmax = 2020) +
p_line_usa +
plot_layout(widths = c(2, 1))

```

```{r}
#| label: merged_lineplot
#| eval: false
```

::: 

## 

::: {.exercise}

1. Was wäre die Überschrift für eure Grafik, wenn sie in der Zeitung stehen würde?
1. Welche Infos sind noch notwendig, um die Grafik zu verstehen? Wo könnte man sie einbauen?
1. Soll die Abbildung aus mehreren Plots bestehen? In welcher Reihenfolge?

:::


# Goal
- Usefulness
- usable
- fitting
- efficient


Tufte Zitat


## Pulikum


## Purpose
- Exploratory vs. Explanatory
- Kann oft über reines Zeigen der Daten hinausgehen. 



# Effizienz: Salienz von Informationen

Man soll raufschauen könnenn, und verschiedene Informationen möglichst schnell aufnehmen, ohne lange zu überlgen. Deshalb hier!


https://www.nature.com/articles/nmeth1010-773
Unterscheiden von Gruppen: 
- Gruppierung
- Größe
- Farbe
- Form

- Bewusste Wahrnehmung ignoriert Informationen und fügt hinzu
- Nähe
- Salienz (Farbe, Größe, Neigung) (Szaﬁr, Haroz, Gleicher & Franconeri
(2016))
- Hier würde das USA Bild passen (evtl. mit einem anderen Beispiel, das den Unterschied deutlich macht, z.B. keine andere Farbe, näher dran durch andere Achse)
- Harold et al., 2016: Lenken von Aufmerksamkeit
- Nothelfer et al., 2017: Redundatne Kodierung führt zu deutlich höherer Genauigkeit der Antworten und kürzeren Reaktionszeiten


## Gruppieren

## Formen

## Darstellung von Größen

:::{.columns}
:::{.column widht="50%}

```{r}
#| echo: false

library(ggplot2)

# Define the data
df <- data.frame(
  row = rep(1:3, each = 2),
  column = rep(c("A", "B"), times = 3),
  size = c(1, 10, 1, 5, 1, 2)
)

# Plot
ggplot(df, aes(x = column, y = factor(row), size = size)) +
  geom_point(shape = 16, color = "#01364C") +
  scale_size_area(max_size = 30) + # keeps area proportional to value
  scale_y_discrete(name = NULL, limits = rev) +
  xlab(NULL) +
  theme_bg() +
  theme(
    axis.text.y = element_text(hjust = 1),
    panel.grid = element_blank(),
    legend.position = "none"
  )
```
:::

:::{.column widht="50%}

::: {.fragment}

```{r}
#| echo: false
library(ggplot2)

# Define the data
df <- data.frame(
  row = rep(1:3, each = 2),
  column = rep(c("A", "B"), times = 3),
  size = c(1, 10, 1, 5, 1, 2)
)

# Plot with squares
ggplot(df, aes(x = column, y = factor(row), size = size)) +
  geom_point(shape = 15, color = "#01364C") + # shape 15 = square
  scale_size_area(max_size = 30) + # still based on area
  scale_y_discrete(name = NULL, limits = rev) +
  xlab(NULL) +
  theme_bg() +
  theme(
    axis.text.y = element_text(hjust = 1),
    panel.grid = element_blank(),
    legend.position = "none"
  )
```

:::
:::
:::

::: {.fragment}
:::{.callout-caution}
Die Größe von Kreisen einzuschätzen ist schwer!
:::
:::


## Das gleiche gilt für Winkel!

::: {.slide data-background-color="white"}


::: {.columns}
 
Versuche, die Größen zu sortieren: 

::: {.column width="50%"}
```{r }
#| echo: false

continent_co2 <- gapminder_2020 %>%
  group_by(world_6region) %>%
  summarise(mean_co2_pcap_cons = mean(co2_pcap_cons, na.rm = TRUE)) %>%
  drop_na(mean_co2_pcap_cons)

continent_co2$world_6region <- factor(
  continent_co2$world_6region,
  levels = c(
    "south_asia",
    "sub_saharan_africa",
    "europe_central_asia",
    "middle_east_north_africa",
    "america",
    "east_asia_pacific"
  ),
  labels = c(
    "South Asia",
    "Sub-Saharan Africa",
    "Europe & Central Asia",
    "Middle East & North Africa",
    "Americas",
    "East Asia & Pacific"
  )
)

continent_co2_pct <- continent_co2 %>%
  mutate(percentage = mean_co2_pcap_cons / sum(mean_co2_pcap_cons)) %>%
  arrange(desc(world_6region)) %>%
  mutate(
    ymax = cumsum(percentage),
    ymin = c(0, head(ymax, -1))
  )


ggplot(
  continent_co2_pct,
  aes(x = "", y = percentage * 100, fill = world_6region)
) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  scale_fill_manual(values = theme_colors) +
  labs(title = "Share of global per capita CO2 consumption") +
  theme_minimal() +
  theme(
    axis.title = element_blank(),
    legend.position = "bottom",
    legend.key.size = unit(0.4, "cm"),
    legend.text = element_text(size = 7),
    legend.title = element_blank()
  )
```
:::

::: {.column width="50%"}
:::{.fragment}

```{r}
#| echo: false


continent_co2_pct <- continent_co2 %>%
  mutate(percentage = mean_co2_pcap_cons / sum(mean_co2_pcap_cons) * 100)

ggplot(
  continent_co2_pct,
  aes(x = world_6region, y = percentage, fill = world_6region)
) +
  geom_bar(stat = "identity", width = 1) +
  scale_fill_manual(values = theme_colors) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  theme(
    axis.title.x = element_blank(),
    axis.text.x = element_blank(),
    legend.position = "bottom",
    legend.key.size = unit(0.4, "cm"),
    legend.text = element_text(size = 7),
    legend.title = element_blank()
  )
```
:::
:::
:::
:::



## Farben
:::: {.columns} 
::: {.column width="50%"}

:::

::: {.column width="50%"}
![](./images/colors.jpg){.image-right}
:::
:::

::: image-ref
Foto von <a href="https://unsplash.com/de/@efekurnaz?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Efe Kurnaz</a> auf <a href="https://unsplash.com/de/fotos/multicolored-hallway-RnCPiXixooY?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
      
:::

### Farbwahrnehmung beim Menschen

::: {.columns}
::: {.column width="50%"}
![](./images/electro_spec.svg)
:::

::: {.column widht="50%"}

Primärfarben des Lichts: **R**ot, **G**rün, **B**lau

:::
:::

:::{.image-ref}
By <a href="//commons.wikimedia.org/wiki/File:Electromagnetic-Spectrum.png" title="File:Electromagnetic-Spectrum.png">Original: </a> <a href="//commons.wikimedia.org/wiki/User:Penubag" title="User:Penubag">Penubag</a> Vector: <a href="//commons.wikimedia.org/wiki/User:Victor_Blacus" title="User:Victor Blacus">Victor Blacus</a> - Own work based on: <a href="//commons.wikimedia.org/wiki/File:Electromagnetic-Spectrum.png" title="File:Electromagnetic-Spectrum.png">Electromagnetic-Spectrum.png</a>, <a href="https://creativecommons.org/licenses/by-sa/3.0" title="Creative Commons Attribution-Share Alike 3.0">CC BY-SA 3.0</a>, <a href="https://commons.wikimedia.org/w/index.php?curid=22428451">Link</a>
:::

### Trichromatizität


Der Mensch hat in der Regel drei Zapfentypen, die unterschiedlich sensitiv für bestimmte Wellenlängen sind: 

![](./images/cones_human.svg)

- RGB erklären (und die Addition im Gehirn?


::: {.image-ref}
By <a href="//commons.wikimedia.org/wiki/User:BenRG" title="User:BenRG">BenRG</a> - <span class="int-own-work" lang="en">Own work</span>, Public Domain, <a href="https://commons.wikimedia.org/w/index.php?curid=7873848">Link</a>
:::

### 
Andere Tiere können auch mal mehr oder weniger haben:

![](./images/color_animals.png)

:::{.image-ref}
Bild aus [Farbsehen der Tiere](https://media.springernature.com/original/springer-static/image/art%3A10.1007%2Fs00347-017-0543-6/MediaObjects/347_2017_543_Fig1_HTML.gif?as=jpg)
:::

###
Viele Tiere sehen nur grau:

- Wale
- Haie
- Waschbären
- Faultiere
- Armadillos
- Oktopusse
- Kraken

Warum also überhaupt Farbwahrnehmung?

- Ist subjektiv
- Aber kann konsistent wahrgenommen werden: Eine Erdebeere im Schatten und im Sonnenlicht kann jeweils rot wahrgenommen werden. Grautöne sind stärker vom Licht abhängig. 
- More is not always better: Affen vom Amerikanischen Kontinent sind teilweise die und teilweise tetra: di kann besser INsekten ausmachen, tri Früchte gegen grünen background. 
- Farbwahrnehmung also abhängig vom Drumrum
- Farben bringen nur einen Vorteil, wenn ein Individuum daraus meaning ableiten kann. 



### Farben
Ganglienzellen übertragen keine Informationen über absolute Helligkeit,
sondern über relative Helligkeit.
‣ Wie stark unterscheiden sich zwei Bereiche in ihrer Helligkeit?
‣ Wie stark hat sich eine Helligkeit gerade geändert?
Allgemeine Lehre daraus:
‣ Visualisierung kann nicht gut darin sein, absolute Werte zu
kommunizieren (Tabellen können das besser)
‣ Hingegen ist das visuelle System (und das Gehirn allgemein) extrem gut
darin, Unterschiede und Veränderungen zu erkennen
--> Beispiel bringen (Simultankontrast)

- Graustufen nicht für absolute oder kategorische Werte nutzen (mehr als vier können iwr nicht gut unterscheiden)

### Farbton, Sättigung, Helligkeit

![](./images/color_properties.png)

### Farbräume
- RGB: **Zusammen**mischen von Licht der unterschiedlichen Farben. Alle drei zusammen ergeben weiß. 
- CMYK: **Ausblenden** aus dem weißen Farbspektrum durch Filter. Grundfarben: Gelb, Magenta (Purpur), Cyan (Blaugrün) (+K - Key (also Schwarz))


### Was bringt uns das jetzt für unsere Abbildungen?

### 1. Unterscheidbar, aber ähnlich

```{r}
#| echo: false

color_plot_bar <- ggplot(
  continent_co2_pct,
  aes(x = world_6region, y = percentage, fill = world_6region)
) +
  geom_bar(stat = "identity", width = 1) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  theme(
    axis.title.x = element_blank(),
    axis.text.x = element_blank(),
    legend.position = "bottom",
    legend.key.size = unit(0.4, "cm"),
    legend.text = element_text(size = 7),
    legend.title = element_blank()
  )
```


::: {.columns}
:::{.column widht="50%}

```{r}
#| label: color_bias__scatter_bar
#| echo: false

theme_colors_2 <- c(
  "#9FAFC0", # entsättigtes Dunkelblau
  "#B49B97", # ausgebleichtes Braun
  "#F2E2A0", # ausgebleichtes Gelb (statt Rot)
  "#D80027", # sehr leuchtendes Rot (statt Gelb)
  "#A7C9C3", # stark aufgehelltes Türkis
  "#D8B88C", # heller Orange-Braun-Ton
  "#A6B7CA", # blasser Stahlblau-Ton
  "#BFD4C2", # sehr blasses Olivgrün
  "#D6C1D5", # blasses Flieder/Pastell-Lila
  "#D8D9DB" # sehr heller, neutraler Grauton
)


color_plot_bar +
  scale_fill_manual(values = theme_colors_2)
```

:::


:::{.column widht="50%}
```{r}
#| label: color_balanced__scatter_bar
#| echo: false


theme_colors_balanced <- c(
  "#4D9285", # gedämpftes Türkisgrün – weniger satt als Original (#208C7A)
  "#D89035", # warmes Ocker-Orange – harmonischer als das grelle Gelb (#F4BA02)
  "#B95454", # weiches Rot – weniger dominant als #9B1B34
  "#4E6D84", # gemäßigtes Dunkelblau – weniger kalt als #01364C
  "#7A5A53", # milderes Braun – balanciert zu den anderen warmen Tönen
  "#BC8B4C", # orange-braun, passt zu Gelb & Braun (#C97E10 → abgemildert)
  "#67829E", # etwas entsättigtes Stahlblau (#476A92)
  "#86A18C", # grünlich-grau – Kombination aus Olive und Türkis
  "#A68CA5", # gedecktes Violett – deutlich ruhiger als Original (#B47EB3)
  "#B7B9BC" # kühles Hellgrau – dient als neutraler Ausgleich
)

color_plot_bar +
  scale_fill_manual(values = theme_colors_balanced)
```


:::

:::


### 1. Unterscheidbar, aber ähnlich

```{r}
#| label: color-plot
#| echo: false

gapminder_1020 <- gapminder %>%
  filter(time %in% 2010:2020)


## Auch gut, weil man das dann verbinden kann um zu zeigen, dass Farben nur Bedingt helfen, Muster zu erkennen.
top5_co2 <- gapminder_1020 %>%
  group_by(name) %>%
  summarise(mean_co2 = mean(co2_pcap_cons, na.rm = TRUE)) %>%
  arrange(desc(mean_co2)) %>%
  slice_head(n = 5)

## Vielleicht besser die 6 worldregions nehmen!
## Dann zum Vergleich später zeigen, Wenn es länder wären.



color_plot <- ggplot(
  gapminder_2020,
  aes(x = pop, y = co2_pcap_cons, color = world_6region)
) +
  geom_point(size = 3) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  xlim(0, 1.5 * 10^9)
```

::: {.columns}
:::{.column widht="50%}
```{r}
#| label: color_bias_bar
#| echo: false
#| fig-width: 7
#| fig-height: 7

theme_colors_2 <- c(
  "#9FAFC0", # entsättigtes Dunkelblau
  "#B49B97", # ausgebleichtes Braun
  "#F2E2A0", # ausgebleichtes Gelb (statt Rot)
  "#D80027", # sehr leuchtendes Rot (statt Gelb)
  "#A7C9C3", # stark aufgehelltes Türkis
  "#D8B88C", # heller Orange-Braun-Ton
  "#A6B7CA", # blasser Stahlblau-Ton
  "#BFD4C2", # sehr blasses Olivgrün
  "#D6C1D5", # blasses Flieder/Pastell-Lila
  "#D8D9DB" # sehr heller, neutraler Grauton
)

color_plot +
  scale_color_manual(values = theme_colors_2) +
  theme_bg()
```
:::

:::{.column widht="50%}
```{r}
#| label: color_balanced_bar
#| echo: false
#| fig-width: 7
#| fig-height: 7

theme_colors_balanced <- c(
  "#4D9285", # gedämpftes Türkisgrün – weniger satt als Original (#208C7A)
  "#D89035", # warmes Ocker-Orange – harmonischer als das grelle Gelb (#F4BA02)
  "#B95454", # weiches Rot – weniger dominant als #9B1B34
  "#4E6D84", # gemäßigtes Dunkelblau – weniger kalt als #01364C
  "#7A5A53", # milderes Braun – balanciert zu den anderen warmen Tönen
  "#BC8B4C", # orange-braun, passt zu Gelb & Braun (#C97E10 → abgemildert)
  "#67829E", # etwas entsättigtes Stahlblau (#476A92)
  "#86A18C", # grünlich-grau – Kombination aus Olive und Türkis
  "#A68CA5", # gedecktes Violett – deutlich ruhiger als Original (#B47EB3)
  "#B7B9BC" # kühles Hellgrau – dient als neutraler Ausgleich
)


color_plot +
  scale_color_manual(values = theme_colors_balanced) +
  theme_bg()

#
#   scale_color_brewer(palette = "Dark2") +
#   theme_minimal() +
#   labs(title = "Share of global per capita CO2 consumption")
```

:::
:::



### Farbton, Sättigung und Helligkeit

:::{.columns}
:::{.column width="50%"}
```{r}
#| label: color_hue_only
#| echo: false


theme_colors_hue_only <- c(
  "#D88585", # muted red
  "#D89D85", # warm orange
  "#CDD885", # soft olive
  "#A9D885", # light green
  "#85D89D", # aquamarine
  "#85D8D8", # turquoise
  "#85A9D8", # muted blue
  "#9D85D8", # lavender
  "#D885CD", # dusty pink-purple
  "#D8859D" # rosy mauve
)



color_plot +
  scale_color_manual(values = theme_colors_hue_only)
```


:::
:::{.column widht="50%}

```{r}
#| echo: false


theme_colors_hue_varied <- c(
  "#C15A5A", # red – more saturated & slightly darker
  "#DA935A", # orange – a bit lighter
  "#D4DA5A", # olive – higher lightness, less saturation
  "#92DA5A", # light green – more saturated
  "#5ADAA0", # aquamarine – brighter & lighter
  "#5ADADA", # turquoise – more saturated & icy
  "#5A92DA", # blue – stronger contrast
  "#7A5ADA", # lavender – richer, darker
  "#DA5AC5", # pink-purple – vivid, high saturation
  "#DA5A8F" # mauve – mid-lightness, saturated
)

color_plot +
  scale_color_manual(values = theme_colors_hue_varied)
```


:::

:::


::: {.callout-tip}
Variiert immer Farbton, Sättigung und Helligkeit gleichzeitig. 
:::

### Grau

::: {.columns}
::: {.column width="50%}

```{r}
#| echo: false

theme_colors_gray <- gray_hex(theme_colors_hue_only)

color_plot_bar +
  scale_fill_manual(values = theme_colors_gray)
```

:::
::: {.column width="50%}

```{r}
#| echo: false

theme_colors_gray_varied <- gray_hex(theme_colors_hue_varied)

color_plot_bar +
  scale_fill_manual(values = theme_colors_gray_varied)
```
:::
:::


### 2. Intuitives Verständnis: Diskrete Farben vs. Farbverläufe
- Vor allem für diskrete Gruppen geeignet
- Farbverläufe schwieriger (aber es gibt color scales dafür)
- Bestimmte Farben (Grün = gut, Rot = Gefahr)

### Größe

:::{.columns}
:::{.column width="33%"}

```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 8


ggplot(
  gapminder_2020,
  aes(x = pop, y = co2_pcap_cons, color = world_6region)
) +
  geom_point(size = 4) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  xlim(0, 1.5 * 10^9) +
  theme_bg() +
  scale_color_manual(values = theme_colors_balanced) +
  theme(
    axis.title.x = element_blank(),
    axis.text.x = element_blank(),
    legend.position = "bottom",
    legend.key.size = unit(0.4, "cm"),
    legend.text = element_text(size = 9),
    legend.title = element_blank()
  )
```
:::

:::{.column width="33%"}
```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 8

ggplot(
  gapminder_2020,
  aes(x = pop, y = co2_pcap_cons, color = world_6region)
) +
  geom_point(size = 2) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  xlim(0, 1.5 * 10^9) +
  theme_bg() +
  scale_color_manual(values = theme_colors_balanced) +
  theme(
    axis.title.x = element_blank(),
    axis.text.x = element_blank(),
    legend.position = "bottom",
    legend.key.size = unit(0.4, "cm"),
    legend.text = element_text(size = 9),
    legend.title = element_blank()
  )
```
:::

:::{.column width="33%"}
```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 8

ggplot(
  gapminder_2020,
  aes(x = pop, y = co2_pcap_cons, color = world_6region)
) +
  geom_point(size = 0.5) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  xlim(0, 1.5 * 10^9) +
  theme_bg() +
  scale_color_manual(values = theme_colors_balanced) +
  theme(
    axis.title.x = element_blank(),
    axis.text.x = element_blank(),
    legend.position = "bottom",
    legend.key.size = unit(0.4, "cm"),
    legend.text = element_text(size = 9),
    legend.title = element_blank()
  )
```
:::
:::


### Farbe ist relativ
Beispiel: 
Grautöne vs Rottöne


![](./images/color_perception.png)

::: .image-ref
Bild von [Nature Methods](https://www.nature.com/articles/nmeth0810-573/figures/1). 
:::


### Farbe ist relativ
```{r}
#| label: color_bias_reds
#| echo: false
#| fig-width: 14
#| fig-height: 7
#|
theme_colors_red <- c(
  "#E28A8A", # weiches Rosa-Rot
  "#CF5C5C", # mildes Mittelrot
  "#D80027", # dein kräftiges Signalrot (Zentrum)
  "#B00022", # etwas dunkler, tiefes Rubinrot
  "#8C001B", # noch dunkleres Weinrot
  "#730016" # fast Bordeaux
)


color_plot +
  scale_color_manual(values = theme_colors_red)

#
#   scale_color_brewer(palette = "Dark2") +
#   theme_minimal() +
#   labs(title = "Share of global per capita CO2 consumption")
```


### Fragen: Warum ist das noch eine schelchte Color scale? 
![](./images/colorblind_check.png)

::: .image-ref
Siehe [Colblindor](https://www.color-blindness.com/coblis-color-blindness-simulator/). 
:::


### Farbfehlsichtigkeit

![](./images/cones_eye.jpg)

protanopic right side

::: {.image-ref}
By Mark Fairchild, <a href="https://creativecommons.org/licenses/by-sa/3.0" title="Creative Commons Attribution-Share Alike 3.0">CC BY-SA 3.0</a>, <a href="https://commons.wikimedia.org/w/index.php?curid=32075732">Link</a>
:::

- Protanopie: Zapfentyp L (rot) fehlt: rot vs grün Schwäche
- Deuteranopie: Zapfentyp M (grün) fehlt: rot vs grün Schwäche
- Tritanopie: Zapfentyp S (blau) fehlt: blau vs grün, gelb vs violett Schwäche


- Take the above scale and show that it is not great for color blindness
- https://www.color-blindness.com/coblis-color-blindness-simulator/


###

```{r}
library(colorblindcheck)
palette_check(theme_colors_red, plot = TRUE)
```

### Das kann man sich natürlich auch zu Nutze machen (Passt aber vielleicht eher zu space? -> da nochmal zeigen, hier die Punkte enger zusammen )

```{r}
#| echo: false
#| eval: false

library(rvest)
library(httr)
library(polite)

url <- "https://en.wikipedia.org/wiki/Gun_ownership"
url_bow <- polite::bow(url)
url_bow

firearm_df <- polite::scrape(url_bow) %>%
  rvest::html_nodes("table.wikitable") %>%
  rvest::html_table(fill = TRUE) %>%
  as.data.frame() %>%
  rename(country = "Countries.and.territories", "guns" = "Estimate.of.civilian.firearms.per.100.people") %>%
  select(country, guns)

saveRDS(firearm_df, here::here("sessions", "good_plots", "data", "firearm_df.rds"))
```

```{r}
#| echo: false

firearm_df <- readRDS(here::here("sessions", "good_plots", "data", "firearm_df.rds"))
df <- data.frame(
  country = c("United States", "Germany", "France", "Canada", "Finland", "Austria", "Australia", "Italy", "Netherlands", "Switzerland"),
  mass_shootings = c(109, 5, 6, 4, 3, 2, 1, 2, 2, 2)
) %>%
  left_join(firearm_df) %>%
  mutate(labels = case_when(
    country == "United States" ~ "USA",
    country == "Germany" ~ "Germany",
    country == "Switzerland" ~ "Switzerland",
    country == "Netherlands" ~ "Netherlands",
    TRUE ~ NA
  ))
```


```{r}
#| echo: false
#| fig-height: 7
#| fig-width: 12

ggplot(
  data = df,
  aes(x = guns, y = mass_shootings, label = labels)
) +
  geom_point(aes(colour = ifelse(country == "United States", "USA", "noUSA")), size = 5) +
  scale_colour_manual(values = c("lightgrey", "red")) +
  geom_text(vjust = 2, size = 5, color = "#01364C") +
  theme_bg() +
  theme(legend.position = "none") +
  xlab("Guns per 100 Civilians") +
  ylab("Number of Mass Shootings 2002 - 2022")
```


::: aside
Data from [Rockefeller Institute](https://rockinst.org/blog/public-mass-shootings-around-the-world-prevalence-context-and-prevention/) and [Wikipedia](https://en.wikipedia.org/wiki/Gun_ownership). 
:::

### Nicht zu viele!


### Color for coding a third dimension
- Wie viel macht sinn?
- Scatterplot
- Sättigung um dimensionalität der Farben darzustellen



### Farbfehlsichtigkeiten

Farbsehtests


- Farbwahrnehmung braucht Helligkeit und Fläche


### Anwendung in ggplot2


### Farben whlen
- Name
- rgb()
- Nummer
- Hex code

### scale_color vs scale_fill

### Farbskalen wählen

### Manuell

::: {.columns}
::: {.column width="50%"}

::: panel-tabset

#### Code

```{r}
#| label: manual_color_scale
#| code-line-numbers: "5,9"
#| fig-show: hide

ggplot(
  continent_co2_pct,
  aes(
    x = world_6region,
    y = percentage,
    fill = world_6region
  )
) +
  geom_bar(stat = "identity", width = 1) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  scale_fill_manual(values = c("red", "green", "blue", "yellow", "violet", "brown"))
```

#### Plot

```{r}
#| label: manual_color_scale
#| echo: false
```

:::
:::

:::{.column widht="50%"}


::: panel-tabset

#### Code

```{r}
#| label: manual_color_scale_named
#| code-line-numbers: "5,9"
#| reults: hide
#| fig-show: hide

my_color_scale <- c(
  "East Asia & Pacific" = "red",
  "South Asia" = "green",
  "Sub-Saharan Africa" = "blue",
  "Europe & Central Asia" = "yellow",
  "Middle East & North Africa" = "violet",
  "Americas" = "brown"
)
ggplot(
  continent_co2_pct,
  aes(
    x = world_6region,
    y = percentage,
    color = world_6region
  )
) +
  geom_bar(stat = "identity", width = 1) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  scale_color_manual(values = my_color_scale)
```

#### Plot

```{r}
#| label: manual_color_scale_named
#| echo: false
```

:::


:::
:::

<!-- ::: {.callout-tip} -->
<!-- Wenn du in einem Projekt die gleichen Gruppen in verschiedenen Plots zeigst, setze die Varbskala einmal mit den Gruppennamen, damit die Gruppen in allen Plots die selben Farben bekommen.  -->
<!-- ::: -->


### Graustufen 

```{r}
#| reults: hide
#| fig-show: hide
#| code-line-numbers: "9"


ggplot(
  continent_co2_pct,
  aes(
    x = world_6region,
    y = percentage,
    fill = world_6region
  )
) +
  geom_bar(stat = "identity", width = 1) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  scale_fill_grey()
```




### Externe Farb-Paletten

::: {.columns}
::: {.column width="50%"}
[**R Color Brewer**](https://r-graph-gallery.com/38-rcolorbrewers-palettes.html)

```{r}
library(RColorBrewer)
display.brewer.all(colorblindFriendly = FALSE)
```

:::
::: {.column width="50%"}


::: panel-tabset

#### Code

```{r}
#| label: color_brewer
#| reults: hide
#| fig-show: hide
#| code-line-numbers: "1,11"

library(RColorBrewer)

ggplot(
  continent_co2_pct,
  aes(
    x = world_6region,
    y = percentage,
    fill = world_6region
  )
) +
  geom_bar(stat = "identity", width = 1) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  scale_fill_brewer(palette = "PuOr")
```


#### Plot

```{r}
#| label: color_brewer
#| echo: false
```

:::
:::
:::

### Externe Farb-Paletten
::: {.columns}
::: {.column width="50%"}
[**paletteer**](https://r-graph-gallery.com/package/paletteer.html)

Sammlung von Paletten aus diversen Paketen

- [Palette-Finder](https://r-graph-gallery.com/color-palette-finder)
- [Gallerie](https://pmassicotte.github.io/paletteer_gallery/#sequential)

:::

::: {.column width="50%"}

::: panel-tabset

#### Code

```{r}
#| label: paletteer
#| reults: hide
#| fig-show: hide
#| code-line-numbers: "1,11"

library(paletteer)

ggplot(
  continent_co2_pct,
  aes(
    x = world_6region,
    y = percentage,
    fill = world_6region
  )
) +
  geom_bar(stat = "identity", width = 1) +
  theme_minimal() +
  labs(title = "Share of global per capita CO2 consumption") +
  scale_fill_paletteer_d("LaCroixColoR::Orange")
```


#### Plot

```{r}
#| label: paletteer
#| echo: false
```

:::
:::

:::


### Arten von Skalen
- Intervallskaliert/Verhältnisskaliert: Es gibt Nullpunkt: Divergierende Skalen
  - Kein Nullpunkt: Gleichmäßige Abstände zwischen Farbwerten
- Ordinal: Richtung und gute Unterscheidbarkeit im Farbraum
- Nominalskaliert: Spriale/Diagnoale im Farbraum


- Diskret
- Continuous
- Binned
Vorgefertigte Paletten:

Sequenziell
\
Qualitativ
\
Diverging


### Weiter Tools

![](./images/hue_box.jpg)


- Colorbrewer
- Huemint

### Farben: Zusammenfassung


## Übung

1. Teste, ob deine bisherige Abbildung für Menschen mit Farbfehlsichtigkeit lesbar ist. 
2. Baue eine eigene Color-Palette und wende sie auf deinen Plot an. Achte dabei auf Unterscheidbarkeit (Auch color blind), aber auch auf Design. 


# Visual Form


## Nützlichkeit

::: {.quote}
Design is a requirement, not a cosmetic addition. ([nature methods](https://www.nature.com/articles/nmeth.1783))
:::


:::{.columns}

::: {.column width="50%"}
![](./images/remote.jpg)

::: image-ref
Foto von <a href="https://unsplash.com/de/@kellysikkema?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Kelly Sikkema</a> auf <a href="https://unsplash.com/de/fotos/drei-schwarze-fernbedienungen-auf-holztisch-HprPUHnjDgk?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::

:::

:::{.column width="50%"}
![](./images/remote_2.jpg)

::: image-ref
Foto von <a href="https://unsplash.com/de/@ymoran?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Yucel Moran</a> auf <a href="https://unsplash.com/de/fotos/schwarze-fernbedienung-auf-weissem-textil-LJW-blAKI98?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::

:::
:::



## Funktionelles Design {.nostretch}

Welche Funktion?

:::{.columns}

::: {.column width="67.5%"}
![](./images/map.png)

::: image-ref
Foto von <a href="https://www.bvg.de/.imaging/mte/bvg-theme/zoomed3000w/dam/BVG-Bilder/Verbindungen/netz-ab-01-a.jpg/jcr:content/netz-ab-01-a.jpg">BVG</a>
:::

:::

:::{.column width="32.5%"}
![](./images/fahrplan-tabelle.png)

::: image-ref
Foto von <a href="https://www.bvg.de/de/verbindungen/linienuebersicht">BVG</a>
:::

:::
:::

::: {.callout-tip}
Dabei kann es helfen, sich von bereits vorhandenen Plots inspirieren zu lassen.  
Handschriftliche Skizze ist auch erstmal hilfreich!
:::



## Simplify to clarify

- Redundanzen Reduzieren
- Fokus auf das Wesentliche
https://www.data-to-viz.com/caveat/declutter.html




## Verteilungen Plotten
Aber: Simplify heißt nicht immer, Informationen zu reduzieren. Eher den Clutter!
Versuchen, möglichst Verteilungen/ Spannweiten anstatt nur zusammengefasster Werte zu plotten. Evtl. IQB-Mittelwertsgrafik zeigen?
Eine Grafik ist kann nur einen Teil der Zusammenhänge darstellen
Im  Schlechtesten Fall für Manipulation nutzbar. 



## Tuftes Data Ink ratio
- So wenig Tinte wie möglich nutzen
- Alles nicht essentielle entfernen
- Redundanzen entferenen  

Beispiel zeigen: Eins ist aufgeblasen, man braucht Zeit zur Orientierung. Ein anderes theme_tufte
Beispiel zum Minimieren zeigen
- Raincloud plots


## Nochmal Farben!

## Kleine Farblehre

"All colors are the friends of their neighbors and the lovers of their opposites." - Marc Chagall 


![](./images/farbkreis.png)

::: image-ref
Nach <a href="https://de.wikipedia.org/wiki/User:MalteAhrens" class="extiw" title="de:User:MalteAhrens">MalteAhrens</a> at <a class="external text" href="https://de.wikipedia.org">de.wikipedia</a>. Vectorization by <a href="//commons.wikimedia.org/wiki/User:SidShakal" title="User:SidShakal">User:SidShakal</a> - Raster version from Wikimedia Commons., Gemeinfrei, <a href="https://commons.wikimedia.org/w/index.php?curid=3574696">Link</a>
:::

## Kleine Farbenlehre

:::{.columns}
:::{.column width="50%"}

![](./images/zoeaaf.jpg)

::: image-ref
<a href="https://commons.wikimedia.org/wiki/File:De_zoeaaf_-_s0067V1962_-_Van_Gogh_Museum.jpg">Vincent van Gogh</a>, Public domain, via Wikimedia Commons
:::
:::

:::{.column width="50%"}
- Gegenüberliegende Farben intensivieren sich gegenseitig: eine Primärfarbe, und eine Sekundärfarbe, die aus den anderen beiden Primärfarben gemischt wird. Das erzeugt stärkere Kontraste. (Van Gogh bild)
- Mit weiß und schwarz lassen sich die Schattierungen hinzumischen
- triadisches Farbschema: Fom MIttelpunkt des Farbkreises Strahlen mit gleichem Winkel abgehen lassen (So viele, wie man Farben haben will). Das wählt dann Farben mit dem größten Kontrast aus. 
(https://www.kunstplaza.de/fashion-design/farbenlehre-farbtheorie-styleguides-fashion-design/)

:::
:::




## Takeaways
Nochmal bei Tufte nachschauen
- Kommunizieren von der größtmöglichen Anzahl von Ideen in kürzester Zeit.
- Maximieren von Data-ink ratio
- Minimieren von Chart-junk
- Erhöhe Datendichte, Vervielfältige kleine Versionen der Abbildung für verschiedene Gruppen



## Show variation!


# Übung
Schlechte Grafiken verbessern: https://www.data-to-viz.com/caveats.html
